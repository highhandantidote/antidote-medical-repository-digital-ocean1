3. Fix Patient Leads Action Buttons
The logs show a lead submission (ID: 13) for patient "rambo," but the action buttons ("View," "Contact," "Update Status") in the patient leads section still aren't working.

Verify Leads Display
Ensure the doctor_leads route in routes.py is correct:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/leads')
@login_required
def doctor_leads(doctor_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this dashboard.', 'danger')
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access. You can only view your own dashboard.', 'danger')
        return redirect(url_for('web.index'))
    leads = Lead.query.filter_by(doctor_id=doctor.id).order_by(Lead.created_at.desc()).all()
    return render_template('doctor_leads.html', doctor=doctor, leads=leads)
Update templates/doctor_leads.html to ensure the action buttons are correctly linked:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Patient Leads - {{ doctor.name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-3">
                <h4>Doctor Profile</h4>
                <p>{{ doctor.name }}</p>
                <p>â˜… {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
                <a href="{{ url_for('web.edit_doctor_profile', doctor_id=doctor.id) }}" class="btn btn-outline-primary">Edit Profile</a>

                <h4 class="mt-4">Dashboard Menu</h4>
                <ul class="list-group">
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
                </ul>
            </div>
            <div class="col-md-9">
                <h3>New Patient Leads</h3>
                {% if leads %}
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Patient</th>
                                <th>Contact</th>
                                <th>Procedure</th>
                                <th>Date</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for lead in leads %}
                                <tr>
                                    <td>{{ lead.patient_name }}</td>
                                    <td>{{ lead.mobile }}<br>{{ lead.user.email if lead.user else 'N/A' }}</td>
                                    <td>{{ lead.procedure_name }}</td>
                                    <td>{{ lead.date }}</td>
                                    <td>{{ lead.status }}</td>
                                    <td>
                                        <a href="{{ url_for('web.view_lead', lead_id=lead.id) }}" class="btn btn-outline-primary btn-sm">View</a>
                                        <a href="{{ url_for('web.contact_lead', lead_id=lead.id) }}" class="btn btn-outline-primary btn-sm">Contact</a>
                                        <a href="{{ url_for('web.update_lead_status', lead_id=lead.id) }}" class="btn btn-outline-primary btn-sm">Update Status</a>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                {% else %}
                    <p>No patient leads available</p>
                {% endif %}
            </div>
        </div>
    </div>
</body>
</html>
Add the necessary routes in routes.py if they're missing:
text

Copy
@web.route('/lead/<int:lead_id>/view')
@login_required
def view_lead(lead_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this.', 'danger')
        return redirect(url_for('web.index'))
    lead = Lead.query.get_or_404(lead_id)
    doctor = Doctor.query.filter_by(user_id=current_user.id).first()
    if lead.doctor_id != doctor.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    return render_template('lead_view.html', lead=lead, doctor=doctor)

@web.route('/lead/<int:lead_id>/contact')
@login_required
def contact_lead(lead_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this.', 'danger')
        return redirect(url_for('web.index'))
    lead = Lead.query.get_or_404(lead_id)
    doctor = Doctor.query.filter_by(user_id=current_user.id).first()
    if lead.doctor_id != doctor.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    flash('Contact functionality is under development.', 'info')
    return redirect(url_for('web.doctor_leads', doctor_id=doctor.id))

@web.route('/lead/<int:lead_id>/update_status', methods=['GET', 'POST'])
@login_required
def update_lead_status(lead_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this.', 'danger')
        return redirect(url_for('web.index'))
    lead = Lead.query.get_or_404(lead_id)
    doctor = Doctor.query.filter_by(user_id=current_user.id).first()
    if lead.doctor_id != doctor.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    if request.method == 'POST':
        new_status = request.form.get('status')
        lead.status = new_status
        db.session.commit()
        flash('Lead status updated!', 'success')
        return redirect(url_for('web.doctor_leads', doctor_id=doctor.id))
    return render_template('update_lead_status.html', lead=lead, doctor=doctor)
Create templates/lead_view.html:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Lead Details - {{ lead.patient_name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Lead Details</h2>
        <p><strong>Patient:</strong> {{ lead.patient_name }}</p>
        <p><strong>Procedure:</strong> {{ lead.procedure_name }}</p>
        <p><strong>Mobile:</strong> {{ lead.mobile }}</p>
        <p><strong>City:</strong> {{ lead.city }}</p>
        <p><strong>Date:</strong> {{ lead.date }}</p>
        <p><strong>Status:</strong> {{ lead.status }}</p>
        <a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}" class="btn btn-primary">Back to Leads</a>
    </div>
</body>
</html>
Create templates/update_lead_status.html:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Update Lead Status - {{ lead.patient_name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Update Lead Status</h2>
        <form method="POST" action="{{ url_for('web.update_lead_status', lead_id=lead.id) }}">
            <div class="mb-3">
                <label for="status" class="form-label">Status</label>
                <select name="status" class="form-control">
                    <option value="pending" {% if lead.status == 'pending' %}selected{% endif %}>Pending</option>
                    <option value="contacted" {% if lead.status == 'contacted' %}selected{% endif %}>Contacted</option>
                    <option value="converted" {% if lead.status == 'converted' %}selected{% endif %}>Converted</option>
                    <option value="closed" {% if lead.status == 'closed' %}selected{% endif %}>Closed</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Update</button>
        </form>
        <a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}" class="btn btn-secondary">Cancel</a>
    </div>
</body>
</html>
Log in as testdoctor@antidote.com, navigate to the Patient Leads section (/dashboard/doctor/1/leads), and test each button for the lead from "rambo" (ID: 13).
4. Fix Inability to Reply to Reviews
Replit added CSRF tokens to doctor_reviews.html and set up some reply functionality, but let's ensure it works fully.

Verify Review Reply Route
Ensure the reply_review route in routes.py is implemented correctly:
text

Copy
from flask_wtf import FlaskForm
from wtforms import TextAreaField, SubmitField
from wtforms.validators import DataRequired

class ReplyForm(FlaskForm):
    reply_text = TextAreaField('Reply', validators=[DataRequired()])
    submit = SubmitField('Reply')

@web.route('/reply_review/<int:review_id>', methods=['POST'])
@login_required
def reply_review(review_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can reply to reviews.', 'danger')
        return redirect(url_for('web.index'))
    review = Review.query.get_or_404(review_id)
    doctor = Doctor.query.filter_by(user_id=current_user.id).first()
    if not doctor or review.doctor_id != doctor.id:
        flash('Unauthorized access. You can only reply to your own reviews.', 'danger')
        return redirect(url_for('web.index'))
    form = ReplyForm()
    if form.validate_on_submit():
        reply_text = form.reply_text.data
        reply = ReviewReply(review_id=review.id, doctor_id=doctor.id, reply_text=reply_text)
        db.session.add(reply)
        db.session.commit()
        flash('Reply submitted successfully!', 'success')
    else:
        flash('Error submitting reply. Please try again.', 'danger')
    return redirect(url_for('web.doctor_reviews', doctor_id=doctor.id))
Verify the doctor_reviews route passes the form to the template:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/reviews')
@login_required
def doctor_reviews(doctor_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this dashboard.', 'danger')
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access. You can only view your own dashboard.', 'danger')
        return redirect(url_for('web.index'))
    reviews = Review.query.filter_by(doctor_id=doctor.id).all()
    form = ReplyForm()
    return render_template('doctor_reviews.html', doctor=doctor, reviews=reviews, form=form)
Ensure templates/doctor_reviews.html includes the reply form with CSRF token:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reviews - {{ doctor.name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-3">
                <h4>Doctor Profile</h4>
                <p>{{ doctor.name }}</p>
                <p>â˜… {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
                <a href="{{ url_for('web.edit_doctor_profile', doctor_id=doctor.id) }}" class="btn btn-outline-primary">Edit Profile</a>

                <h4 class="mt-4">Dashboard Menu</h4>
                <ul class="list-group">
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
                </ul>
            </div>
            <div class="col-md-9">
                <h3>Your Reviews</h3>
                {% if reviews %}
                    {% for review in reviews %}
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">Rating: â˜… {{ review.rating }}</h5>
                                <p class="card-text">{{ review.comment }}</p>
                                <p class="card-text"><small class="text-muted">By {{ review.user.name }} on {{ review.created_at }}</small></p>
                                {% if review.replies %}
                                    {% for reply in review.replies %}
                                        <div class="card mt-2 bg-light">
                                            <div class="card-body">
                                                <p class="card-text">{{ reply.reply_text }}</p>
                                                <p class="card-text"><small class="text-muted">Replied on {{ reply.created_at }}</small></p>
                                            </div>
                                        </div>
                                    {% endfor %}
                                {% endif %}
                                <form method="POST" action="{{ url_for('web.reply_review', review_id=review.id) }}">
                                    {{ form.hidden_tag() }}
                                    <div class="mb-3">
                                        <label for="reply_text" class="form-label">Your Reply</label>
                                        {{ form.reply_text(class="form-control", rows="3") }}
                                    </div>
                                    {{ form.submit(class="btn btn-primary") }}
                                </form>
                            </div>
                        </div>
                    {% endfor %}
                {% else %}
                    <p>No reviews yet</p>
                {% endif %}
            </div>
        </div>
    </div>
</body>
</html>
Log in as testdoctor@antidote.com, navigate to the Reviews section (/dashboard/doctor/1/reviews), and reply to the existing review from testuser. Confirm the reply appears below the review.
5. Fix Missing "Answer as Doctor" in Community
The logs show a community thread ("hair is great"), but the "Answer as Doctor" option is still missing.

Add "Answer as Doctor" Option
Update the doctor_community route in routes.py to fetch relevant threads:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/community')
@login_required
def doctor_community(doctor_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this dashboard.', 'danger')
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access. You can only view your own dashboard.', 'danger')
        return redirect(url_for('web.index'))
    threads = Community.query.order_by(Community.created_at.desc()).limit(5).all()
    return render_template('doctor_community.html', doctor=doctor, threads=threads)
Update templates/doctor_community.html to include the "Answer as Doctor" option:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Community - {{ doctor.name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-3">
                <h4>Doctor Profile</h4>
                <p>{{ doctor.name }}</p>
                <p>â˜… {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
                <a href="{{ url_for('web.edit_doctor_profile', doctor_id=doctor.id) }}" class="btn btn-outline-primary">Edit Profile</a>

                <h4 class="mt-4">Dashboard Menu</h4>
                <ul class="list-group">
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
                </ul>
            </div>
            <div class="col-md-9">
                <h3>Community Engagement</h3>
                <div class="alert alert-info">
                    Engaging with the community as a doctor helps build trust and establish you as an authority in your field.
                </div>
                <h5>Recent Threads in Your Specialties</h5>
                <a href="{{ url_for('web.community') }}" class="btn btn-outline-primary mb-3">View All Threads</a>
                {% if threads %}
                    <ul class="list-group">
                        {% for thread in threads %}
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <a href="{{ url_for('web.community_thread', thread_id=thread.id) }}">{{ thread.title }}</a>
                                <a href="{{ url_for('web.reply_to_thread', thread_id=thread.id) }}" class="btn btn-outline-primary btn-sm">Answer as Doctor</a>
                            </li>
                        {% endfor %}
                    </ul>
                {% else %}
                    <p>No recent community threads in your specialties</p>
                {% endif %}
            </div>
        </div>
    </div>
</body>
</html>
Add the reply route in routes.py:
text

Copy
@web.route('/community/thread/<int:thread_id>/reply', methods=['GET', 'POST'])
@login_required
def reply_to_thread(thread_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can reply to community threads.', 'danger')
        return redirect(url_for('web.community'))
    thread = Community.query.get_or_404(thread_id)
    doctor = Doctor.query.filter_by(user_id=current_user.id).first()
    if request.method == 'POST':
        reply_content = request.form.get('reply_content')
        if not reply_content:
            flash('Reply cannot be empty.', 'danger')
            return redirect(url_for('web.community_thread', thread_id=thread.id))
        reply = CommunityReply(
            thread_id=thread.id,
            user_id=current_user.id,
            content=reply_content,
            is_doctor_reply=True
        )
        db.session.add(reply)
        db.session.commit()
        flash('Reply posted successfully!', 'success')
        return redirect(url_for('web.community_thread', thread_id=thread.id))
    return render_template('community_reply.html', thread=thread, doctor=doctor)
Create templates/community_reply.html:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reply to Thread - {{ thread.title }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Reply to Thread: {{ thread.title }}</h2>
        <form method="POST" action="{{ url_for('web.reply_to_thread', thread_id=thread.id) }}">
            <div class="mb-3">
                <label for="reply_content" class="form-label">Your Reply (as Doctor)</label>
                <textarea name="reply_content" class="form-control" rows="5" required></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Submit Reply</button>
        </form>
        <a href="{{ url_for('web.community_thread', thread_id=thread.id) }}" class="btn btn-secondary">Cancel</a>
    </div>
</body>
</html>
Log in as testdoctor@antidote.com, navigate to the Community section (/dashboard/doctor/1/community), and reply to the thread "hair is great" (thread ID: 2) using the "Answer as Doctor" option.
6. Fix Other Action Buttons
Let's ensure all other action buttons in the dashboard work, including "Edit Profile," "Add Procedure," "Details," and "Remove" in My Procedures.

Edit Profile Button
Add the edit_doctor_profile route in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/edit_profile', methods=['GET', 'POST'])
@login_required
def edit_doctor_profile(doctor_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this.', 'danger')
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    if request.method == 'POST':
        doctor.name = request.form.get('name')
        doctor.specialty = request.form.get('specialty')
        doctor.experience = request.form.get('experience')
        doctor.city = request.form.get('city')
        doctor.state = request.form.get('state')
        doctor.hospital = request.form.get('hospital')
        doctor.consultation_fee = request.form.get('consultation_fee')
        doctor.bio = request.form.get('bio')
        db.session.commit()
        flash('Profile updated successfully!', 'success')
        return redirect(url_for('web.doctor_dashboard', doctor_id=doctor.id))
    return render_template('edit_doctor_profile.html', doctor=doctor)
Create templates/edit_doctor_profile.html:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Edit Profile - {{ doctor.name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Edit Profile</h2>
        <form method="POST" action="{{ url_for('web.edit_doctor_profile', doctor_id=doctor.id) }}">
            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <input type="text" name="name" class="form-control" value="{{ doctor.name }}" required>
            </div>
            <div class="mb-3">
                <label for="specialty" class="form-label">Specialty</label>
                <input type="text" name="specialty" class="form-control" value="{{ doctor.specialty }}">
            </div>
            <div class="mb-3">
                <label for="experience" class="form-label">Experience (Years)</label>
                <input type="number" name="experience" class="form-control" value="{{ doctor.experience }}">
            </div>
            <div class="mb-3">
                <label for="city" class="form-label">City</label>
                <input type="text" name="city" class="form-control" value="{{ doctor.city }}">
            </div>
            <div class="mb-3">
                <label for="state" class="form-label">State</label>
                <input type="text" name="state" class="form-control" value="{{ doctor.state }}">
            </div>
            <div class="mb-3">
                <label for="hospital" class="form-label">Hospital</label>
                <input type="text" name="hospital" class="form-control" value="{{ doctor.hospital }}">
            </div>
            <div class="mb-3">
                <label for="consultation_fee" class="form-label">Consultation Fee</label>
                <input type="number" step="0.01" name="consultation_fee" class="form-control" value="{{ doctor.consultation_fee }}">
            </div>
            <div class="mb-3">
                <label for="bio" class="form-label">Bio</label>
                <textarea name="bio" class="form-control" rows="5">{{ doctor.bio }}</textarea>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </form>
        <a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}" class="btn btn-secondary">Cancel</a>
    </div>
</body>
</html>
Add Procedure, Details, and Remove Buttons
Update the doctor_procedures route in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/procedures')
@login_required
def doctor_procedures(doctor_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this dashboard.', 'danger')
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access. You can only view your own dashboard.', 'danger')
        return redirect(url_for('web.index'))
    procedures = Procedure.query.join(DoctorProcedure).filter(DoctorProcedure.doctor_id == doctor.id).all()
    return render_template('doctor_procedures.html', doctor=doctor, procedures=procedures)
Update templates/doctor_procedures.html:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>My Procedures - {{ doctor.name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-3">
                <h4>Doctor Profile</h4>
                <p>{{ doctor.name }}</p>
                <p>â˜… {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
                <a href="{{ url_for('web.edit_doctor_profile', doctor_id=doctor.id) }}" class="btn btn-outline-primary">Edit Profile</a>

                <h4 class="mt-4">Dashboard Menu</h4>
                <ul class="list-group">
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                    <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
                </ul>
            </div>
            <div class="col-md-9">
                <h3>My Procedures</h3>
                <a href="{{ url_for('web.add_procedure', doctor_id=doctor.id) }}" class="btn btn-outline-primary mb-3">Add Procedure</a>
                {% if procedures %}
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Procedure</th>
                                <th>Category</th>
                                <th>Price Range</th>
                                <th>Rating</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for procedure in procedures %}
                                <tr>
                                    <td>{{ procedure.name }}</td>
                                    <td>{{ procedure.category }}</td>
                                    <td>${{ procedure.price_min }} - ${{ procedure.price_max }}</td>
                                    <td>â˜… {{ procedure.rating }} ({{ procedure.review_count }})</td>
                                    <td>
                                        <a href="{{ url_for('web.procedure_details', procedure_id=procedure.id) }}" class="btn btn-outline-primary btn-sm">Details</a>
                                        <a href="{{ url_for('web.remove_procedure', procedure_id=procedure.id, doctor_id=doctor.id) }}" class="btn btn-outline-danger btn-sm">Remove</a>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                {% else %}
                    <p>No procedures added yet</p>
                {% endif %}
            </div>
        </div>
    </div>
</body>
</html>
Add the necessary routes in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/add_procedure', methods=['GET', 'POST'])
@login_required
def add_procedure(doctor_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this.', 'danger')
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    if request.method == 'POST':
        procedure_name = request.form.get('procedure_name')
        category = request.form.get('category')
        price_min = request.form.get('price_min')
        price_max = request.form.get('price_max')
        procedure = Procedure(
            name=procedure_name,
            category=category,
            price_min=price_min,
            price_max=price_max,
            rating=0,
            review_count=0
        )
        db.session.add(procedure)
        db.session.commit()
        doctor_procedure = DoctorProcedure(doctor_id=doctor.id, procedure_id=procedure.id)
        db.session.add(doctor_procedure)
        db.session.commit()
        flash('Procedure added successfully!', 'success')
        return redirect(url_for('web.doctor_procedures', doctor_id=doctor.id))
    return render_template('add_procedure.html', doctor=doctor)

@web.route('/procedure/<int:procedure_id>/details')
@login_required
def procedure_details(procedure_id):
    procedure = Procedure.query.get_or_404(procedure_id)
    doctor = Doctor.query.filter_by(user_id=current_user.id).first()
    if not doctor:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    return render_template('procedure_details.html', procedure=procedure, doctor=doctor)

@web.route('/dashboard/doctor/<int:doctor_id>/remove_procedure/<int:procedure_id>')
@login_required
def remove_procedure(doctor_id, procedure_id):
    if current_user.role != 'doctor':
        flash('Unauthorized access. Only doctors can access this.', 'danger')
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    doctor_procedure = DoctorProcedure.query.filter_by(doctor_id=doctor.id, procedure_id=procedure_id).first()
    if doctor_procedure:
        db.session.delete(doctor_procedure)
        db.session.commit()
        flash('Procedure removed successfully!', 'success')
    return redirect(url_for('web.doctor_procedures', doctor_id=doctor.id))
Create templates/add_procedure.html:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Procedure - {{ doctor.name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Add Procedure</h2>
        <form method="POST" action="{{ url_for('web.add_procedure', doctor_id=doctor.id) }}">
            <div class="mb-3">
                <label for="procedure_name" class="form-label">Procedure Name</label>
                <input type="text" name="procedure_name" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="category" class="form-label">Category</label>
                <input type="text" name="category" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="price_min" class="form-label">Price Range (Min)</label>
                <input type="number" name="price_min" class="form-control" required>
            </div>
            <div class="mb-3">
                <label for="price_max" class="form-label">Price Range (Max)</label>
                <input type="number" name="price_max" class="form-control" required>
            </div>
            <button type="submit" class="btn btn-primary">Add Procedure</button>
        </form>
        <a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}" class="btn btn-secondary">Cancel</a>
    </div>
</body>
</html>
Create templates/procedure_details.html:
text

Copy
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Procedure Details - {{ procedure.name }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Procedure Details</h2>
        <p><strong>Name:</strong> {{ procedure.name }}</p>
        <p><strong>Category:</strong> {{ procedure.category }}</p>
        <p><strong>Price Range:</strong> ${{ procedure.price_min }} - ${{ procedure.price_max }}</p>
        <p><strong>Rating:</strong> â˜… {{ procedure.rating }} ({{ procedure.review_count }} reviews)</p>
        <a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}" class="btn btn-primary">Back to Procedures</a>
    </div>
</body>
</html>
7. Thorough Testing
Restart the application:
Restarted Start application
Test each section:
Registration: Confirm the registration page works by registering a new user.
Appointments: Book an appointment as testuser and confirm it appears in Dr. John Smithâ€™s dashboard.
Patient Leads: Test all action buttons for the lead from "rambo."
Reviews: Reply to the review from testuser.
Community: Reply to the thread "hair is great" as a doctor.
My Procedures: Add a new procedure, view its details, and remove it.
Check the Flask logs and browser console for errors during testing.