In my Flask-based Antidote project, we’re building a plastic surgery marketplace. The doctor dashboard (`/dashboard/doctor/1`) is partially implemented but shows "Doctor not found," and several features (leads, appointments, procedures, availability, gallery, reviews, community, verification) need completion. Fix the test doctor account (`testdoctor@antidote.com`), implement missing features, and test the updated dashboard. Use the test user (`testuser@antidote.com`, password: `password123`) to generate leads and appointments for testing.

### Tasks

#### 1. Fix the Test Doctor Account Setup
1. Update the script to create the test doctor account (`add_test_doctor.py`) to ensure proper setup:
from app import app, db
from models import User, Doctor, DoctorProcedure, Procedure

with app.app_context():

Create test doctor user
user = User(
email='testdoctor@antidote.com',
name='Test Doctor',
role='doctor',
phone_number='1234567890',
is_verified=True
)
user.set_password('doctorpass123')
db.session.add(user)
db.session.commit()

Create associated doctor profile
doctor = Doctor(
user_id=user.id,
name='Dr. Test',
specialty='Plastic Surgery',
experience=10,
city='New York',
state='NY',
hospital='Test Hospital',
consultation_fee=200,
is_verified=True,
rating=4.5,
review_count=10,
bio='Experienced plastic surgeon.'
)
db.session.add(doctor)
db.session.commit()

Create a procedure and link it to the doctor
procedure = Procedure.query.filter_by(procedure_name='Rhinoplasty').first()
if not procedure:
procedure = Procedure(
procedure_name='Rhinoplasty',
short_description='Reshapes the nose for improved appearance and function',
cost_lower=35000,
cost_upper=105000,
popularity_score=100
)
db.session.add(procedure)
db.session.commit()

doctor_procedure = DoctorProcedure(doctor_id=doctor.id, procedure_id=procedure.id)
db.session.add(doctor_procedure)
db.session.commit()

print("Test doctor created: testdoctor@antidote.com / doctorpass123")

text

Copy
- Save the file.
- Run the script: `python add_test_doctor.py`

2. Update `routes.py` to fetch the doctor correctly:
@web.route('/dashboard/doctor/')
@login_required
def doctor_dashboard(doctor_id):
if current_user.role != 'doctor':
return redirect(url_for('web.index'))
doctor = Doctor.query.get_or_404(doctor_id)
if doctor.user_id != current_user.id:
flash('Unauthorized access.', 'danger')
return redirect(url_for('web.index'))
leads = Lead.query.filter_by(doctor_id=doctor.id).all()
return render_template('dashboard_doctor.html', doctor=doctor, leads=leads)

text

Copy
- Save the file.

#### 2. Update the Leads Section
3. Update `templates/dashboard_doctor.html` to display the leads table (even when empty):
<div class="container"> <div class="row"> <div class="col-md-3"> <h4>Doctor Profile</h4> <p>{{ doctor.name }}</p> <p>★ {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p> <a href="#" class="btn btn-outline-primary">Edit Profile</a> <h4 class="mt-4">Dashboard Menu</h4> <ul class="list-group"> <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li> <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li> <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li> <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li> <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li> <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li> <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li> <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li> <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li> </ul> </div> <div class="col-md-9"> <h3>Overview</h3> <div class="row"> <div class="col-md-4"> <h5>Leads</h5> <p>{{ leads|length }} New patient inquiries</p> </div> <div class="col-md-4"> <h5>Appointments</h5> <p>0 Upcoming consultations</p> </div> <div class="col-md-4"> <h5>Reviews</h5> <p>{{ doctor.review_count }} Patient feedback</p> </div> </div> <h3>Recent Activity</h3> <p>No recent activity to display</p> </div> </div> </div> ``` - Save the file.
Create templates/doctor_leads.html for the leads section:
text

Copy
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <h4>Doctor Profile</h4>
            <p>{{ doctor.name }}</p>
            <p>★ {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
            <a href="#" class="btn btn-outline-primary">Edit Profile</a>

            <h4 class="mt-4">Dashboard Menu</h4>
            <ul class="list-group">
                <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
            </ul>
        </div>
        <div class="col-md-9">
            <h3>New Patient Leads</h3>
            {% if leads %}
                <table class="table">
                    <thead>
                        <tr>
                            <th>Patient Name</th>
                            <th>Procedure</th>
                            <th>Preferred Date</th>
                            <th>Contact</th>
                            <th>City</th>
                            <th>Message</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for lead in leads %}
                            <tr>
                                <td>{{ lead.patient_name }}</td>
                                <td>{{ lead.procedure_name }}</td>
                                <td>{{ lead.preferred_date }}</td>
                                <td>{{ lead.mobile_number }}</td>
                                <td>{{ lead.city }}</td>
                                <td>{{ lead.message }}</td>
                                <td>{{ lead.status }}</td>
                                <td>
                                    <form method="POST" action="{{ url_for('web.respond_lead', lead_id=lead.id) }}">
                                        <select name="status" class="form-select">
                                            <option value="pending" {% if lead.status == 'pending' %}selected{% endif %}>Pending</option>
                                            <option value="accepted">Accept</option>
                                            <option value="rejected">Reject</option>
                                        </select>
                                        <button type="submit" class="btn btn-sm btn-primary">Update</button>
                                    </form>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% else %}
                <p>No new patient leads</p>
            {% endif %}
        </div>
    </div>
</div>
Save the file.
Add the leads route in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/leads')
@login_required
def doctor_leads(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    leads = Lead.query.filter_by(doctor_id=doctor.id).all()
    return render_template('doctor_leads.html', doctor=doctor, leads=leads)
Save the file.
3. Implement Appointments and Availability
Add an Appointment model in models.py:
text

Copy
class Appointment(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    doctor_id = db.Column(db.Integer, db.ForeignKey('doctor.id'), nullable=False)
    procedure_name = db.Column(db.String(100), nullable=False)
    appointment_date = db.Column(db.Date, nullable=False)
    appointment_time = db.Column(db.Time, nullable=False)
    status = db.Column(db.String(20), default='pending')  # pending, confirmed, completed, cancelled
    user = db.relationship('User', backref='appointments')
    doctor = db.relationship('Doctor', backref='appointments')
Save the file.
Add an Availability model in models.py:
text

Copy
class Availability(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    doctor_id = db.Column(db.Integer, db.ForeignKey('doctor.id'), nullable=False)
    day_of_week = db.Column(db.String(10), nullable=False)  # e.g., Monday
    start_time = db.Column(db.Time, nullable=True)
    end_time = db.Column(db.Time, nullable=True)
    doctor = db.relationship('Doctor', backref='availabilities')
Save the file.
Update the database schema:
Run: flask db migrate -m "Add Appointment and Availability models"
Run: flask db upgrade
Add appointment scheduling logic in routes.py:
text

Copy
from datetime import datetime, date, time

@web.route('/doctors/detail/<int:doctor_id>/book_appointment', methods=['POST'])
@login_required
def book_appointment(doctor_id):
    doctor = Doctor.query.get_or_404(doctor_id)
    procedure_name = request.form.get('procedure')
    appointment_date = datetime.strptime(request.form.get('appointment_date'), '%Y-%m-%d').date()
    appointment_time = datetime.strptime(request.form.get('appointment_time'), '%H:%M').time()

    # Check doctor's availability
    day_of_week = appointment_date.strftime('%A')
    availability = Availability.query.filter_by(doctor_id=doctor.id, day_of_week=day_of_week).first()
    if not availability or not (availability.start_time <= appointment_time <= availability.end_time):
        flash('Doctor is not available at this time.', 'danger')
        return redirect(url_for('web.doctor_detail', doctor_id=doctor_id))

    appointment = Appointment(
        user_id=current_user.id,
        doctor_id=doctor.id,
        procedure_name=procedure_name,
        appointment_date=appointment_date,
        appointment_time=appointment_time,
        status='pending'
    )
    db.session.add(appointment)
    db.session.commit()

    # Notify doctor
    msg = Message('New Appointment Request', recipients=[doctor.user.email])
    msg.body = f'A new appointment for {procedure_name} has been requested by {current_user.name} on {appointment_date} at {appointment_time}.'
    mail.send(msg)

    flash('Appointment request submitted!', 'success')
    return redirect(url_for('web.doctor_detail', doctor_id=doctor_id))
Save the file.
Update doctor_detail.html to include an appointment booking form in the modal:
text

Copy
<!-- Inside the Lead Submission Modal -->
<div class="modal-body">
    <form method="POST" action="{{ url_for('web.book_appointment', doctor_id=doctor.id) }}">
        <div class="mb-3">
            <label for="procedure" class="form-label">Select Procedure *</label>
            <select name="procedure" class="form-select" required>
                {% for proc in procedures %}
                    <option value="{{ proc.procedure_name }}">{{ proc.procedure_name }}</option>
                {% endfor %}
            </select>
        </div>
        <div class="mb-3">
            <label for="appointment_date" class="form-label">Appointment Date *</label>
            <input type="date" name="appointment_date" class="form-control" required>
        </div>
        <div class="mb-3">
            <label for="appointment_time" class="form-label">Appointment Time *</label>
            <input type="time" name="appointment_time" class="form-control" required>
        </div>
        <div class="mb-3 form-check">
            <input type="checkbox" name="consent_given" class="form-check-input" required>
            <label class="form-check-label">I consent to data processing per Antidote’s privacy policy as per DPDP Act 2023 *</label>
        </div>
        <button type="submit" class="btn btn-success">Book Appointment</button>
    </form>
</div>
Save the file.
Create templates/doctor_appointments.html:
text

Copy
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <h4>Doctor Profile</h4>
            <p>{{ doctor.name }}</p>
            <p>★ {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
            <a href="#" class="btn btn-outline-primary">Edit Profile</a>

            <h4 class="mt-4">Dashboard Menu</h4>
            <ul class="list-group">
                <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
            </ul>
        </div>
        <div class="col-md-9">
            <h3>Upcoming Appointments</h3>
            <a href="#" class="btn btn-outline-primary mb-3">View Calendar</a>
            {% if upcoming_appointments %}
                <table class="table">
                    <thead>
                        <tr>
                            <th>Patient</th>
                            <th>Procedure</th>
                            <th>Date</th>
                            <th>Time</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for appointment in upcoming_appointments %}
                            <tr>
                                <td>{{ appointment.user.name }}</td>
                                <td>{{ appointment.procedure_name }}</td>
                                <td>{{ appointment.appointment_date }}</td>
                                <td>{{ appointment.appointment_time }}</td>
                                <td>{{ appointment.status }}</td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% else %}
                <p>No upcoming appointments</p>
            {% endif %}

            <h3>Past Appointments</h3>
            {% if past_appointments %}
                <table class="table">
                    <thead>
                        <tr>
                            <th>Patient</th>
                            <th>Procedure</th>
                            <th>Date</th>
                            <th>Time</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for appointment in past_appointments %}
                            <tr>
                                <td>{{ appointment.user.name }}</td>
                                <td>{{ appointment.procedure_name }}</td>
                                <td>{{ appointment.appointment_date }}</td>
                                <td>{{ appointment.appointment_time }}</td>
                                <td>{{ appointment.status }}</td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% else %}
                <p>No past appointments</p>
            {% endif %}
        </div>
    </div>
</div>
Save the file.
Add the appointments route in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/appointments')
@login_required
def doctor_appointments(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    today = date.today()
    upcoming_appointments = Appointment.query.filter_by(doctor_id=doctor.id).filter(Appointment.appointment_date >= today).all()
    past_appointments = Appointment.query.filter_by(doctor_id=doctor.id).filter(Appointment.appointment_date < today).all()
    return render_template('doctor_appointments.html', doctor=doctor, upcoming_appointments=upcoming_appointments, past_appointments=past_appointments)
Save the file.
Create templates/doctor_availability.html:
text

Copy
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <h4>Doctor Profile</h4>
            <p>{{ doctor.name }}</p>
            <p>★ {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
            <a href="#" class="btn btn-outline-primary">Edit Profile</a>

            <h4 class="mt-4">Dashboard Menu</h4>
            <ul class="list-group">
                <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
            </ul>
        </div>
        <div class="col-md-9">
            <h3>Manage Availability</h3>
            <div class="row">
                <div class="col-md-6">
                    <h5>Set Regular Hours</h5>
                    <form method="POST" action="{{ url_for('web.set_availability', doctor_id=doctor.id) }}">
                        {% for day in ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] %}
                            <div class="mb-3">
                                <label>{{ day }}</label>
                                {% set availability = availabilities|selectattr('day_of_week', 'equalto', day)|first %}
                                <div class="row">
                                    <div class="col">
                                        <input type="time" name="{{ day }}_start" value="{{ availability.start_time if availability else '' }}">
                                    </div>
                                    <div class="col">
                                        <input type="time" name="{{ day }}_end" value="{{ availability.end_time if availability else '' }}">
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                        <button type="submit" class="btn btn-primary">Save Hours</button>
                    </form>
                </div>
                <div class="col-md-6">
                    <h5>Upcoming Availability</h5>
                    <p>Manage specific dates or exceptions in your calendar.</p>
                </div>
            </div>
        </div>
    </div>
</div>
Save the file.
Add the availability route in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/availability', methods=['GET', 'POST'])
@login_required
def doctor_availability(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))

    if request.method == 'POST':
        for day in ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']:
            start_time = request.form.get(f'{day}_start')
            end_time = request.form.get(f'{day}_end')
            availability = Availability.query.filter_by(doctor_id=doctor.id, day_of_week=day).first()
            if not availability:
                availability = Availability(doctor_id=doctor.id, day_of_week=day)
                db.session.add(availability)
            if start_time and end_time:
                availability.start_time = datetime.strptime(start_time, '%H:%M').time()
                availability.end_time = datetime.strptime(end_time, '%H:%M').time()
            else:
                availability.start_time = None
                availability.end_time = None
            db.session.commit()
        flash('Availability updated!', 'success')
        return redirect(url_for('web.doctor_availability', doctor_id=doctor.id))

    availabilities = Availability.query.filter_by(doctor_id=doctor.id).all()
    return render_template('doctor_availability.html', doctor=doctor, availabilities=availabilities)
Save the file.
4. Implement My Procedures
Create templates/doctor_procedures.html:
text

Copy
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <h4>Doctor Profile</h4>
            <p>{{ doctor.name }}</p>
            <p>★ {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
            <a href="#" class="btn btn-outline-primary">Edit Profile</a>

            <h4 class="mt-4">Dashboard Menu</h4>
            <ul class="list-group">
                <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
            </ul>
        </div>
        <div class="col-md-9">
            <h3>My Procedures</h3>
            <a href="#" class="btn btn-outline-primary mb-3" data-bs-toggle="modal" data-bs-target="#addProcedureModal">Add Procedure</a>
            {% if procedures %}
                <ul>
                    {% for procedure in procedures %}
                        <li>{{ procedure.procedure_name }}</li>
                    {% endfor %}
                </ul>
            {% else %}
                <p>You haven’t added any procedures yet</p>
            {% endif %}
        </div>
    </div>
</div>

<!-- Add Procedure Modal -->
<div class="modal fade" id="addProcedureModal" tabindex="-1" aria-labelledby="addProcedureModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProcedureModalLabel">Add Procedure</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="POST" action="{{ url_for('web.add_procedure', doctor_id=doctor.id) }}">
                    <div class="mb-3">
                        <label for="procedure" class="form-label">Select Procedure</label>
                        <select name="procedure_id" class="form-select" required>
                            {% for proc in available_procedures %}
                                <option value="{{ proc.id }}">{{ proc.procedure_name }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Add</button>
                </form>
            </div>
        </div>
    </div>
</div>
Save the file.
Add the procedures route in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/procedures', methods=['GET', 'POST'])
@login_required
def doctor_procedures(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    procedures = Procedure.query.join(DoctorProcedure).filter(DoctorProcedure.doctor_id == doctor.id).all()
    available_procedures = Procedure.query.all()
    return render_template('doctor_procedures.html', doctor=doctor, procedures=procedures, available_procedures=available_procedures)

@web.route('/dashboard/doctor/<int:doctor_id>/add_procedure', methods=['POST'])
@login_required
def add_procedure(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    procedure_id = request.form.get('procedure_id')
    doctor_procedure = DoctorProcedure(doctor_id=doctor.id, procedure_id=procedure_id)
    db.session.add(doctor_procedure)
    db.session.commit()
    flash('Procedure added!', 'success')
    return redirect(url_for('web.doctor_procedures', doctor_id=doctor.id))
Save the file.
5. Implement Gallery
Add a Photo model in models.py:
text

Copy
class Photo(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    doctor_id = db.Column(db.Integer, db.ForeignKey('doctor.id'), nullable=False)
    filename = db.Column(db.String(100), nullable=False)
    doctor = db.relationship('Doctor', backref='photos')
Save the file.
Update the database schema:
Run: flask db migrate -m "Add Photo model"
Run: flask db upgrade
Create templates/doctor_gallery.html:
text

Copy
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <h4>Doctor Profile</h4>
            <p>{{ doctor.name }}</p>
            <p>★ {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
            <a href="#" class="btn btn-outline-primary">Edit Profile</a>

            <h4 class="mt-4">Dashboard Menu</h4>
            <ul class="list-group">
                <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
            </ul>
        </div>
        <div class="col-md-9">
            <h3>Photo Gallery</h3>
            <a href="#" class="btn btn-outline-primary mb-3" data-bs-toggle="modal" data-bs-target="#uploadPhotoModal">Upload Photos</a>
            {% if photos %}
                <div class="row">
                    {% for photo in photos %}
                        <div class="col-md-4">
                            <img src="{{ url_for('static', filename='uploads/' + photo.filename) }}" class="img-fluid" alt="Gallery Photo">
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <p>You haven’t uploaded any photos yet</p>
            {% endif %}
        </div>
    </div>
</div>

<!-- Upload Photo Modal -->
<div class="modal fade" id="uploadPhotoModal" tabindex="-1" aria-labelledby="uploadPhotoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadPhotoModalLabel">Upload Photo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="POST" action="{{ url_for('web.upload_photo', doctor_id=doctor.id) }}" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="photo" class="form-label">Select Photo</label>
                        <input type="file" name="photo" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Upload</button>
                </form>
            </div>
        </div>
    </div>
</div>
Save the file.
Add the gallery route in routes.py:
text

Copy
import os
from werkzeug.utils import secure_filename

app.config['UPLOAD_FOLDER'] = 'static/uploads'
os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)

@web.route('/dashboard/doctor/<int:doctor_id>/gallery')
@login_required
def doctor_gallery(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    photos = Photo.query.filter_by(doctor_id=doctor.id).all()
    return render_template('doctor_gallery.html', doctor=doctor, photos=photos)

@web.route('/dashboard/doctor/<int:doctor_id>/upload_photo', methods=['POST'])
@login_required
def upload_photo(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    if 'photo' not in request.files:
        flash('No file part', 'danger')
        return redirect(url_for('web.doctor_gallery', doctor_id=doctor.id))
    file = request.files['photo']
    if file.filename == '':
        flash('No selected file', 'danger')
        return redirect(url_for('web.doctor_gallery', doctor_id=doctor.id))
    filename = secure_filename(file.filename)
    file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
    photo = Photo(doctor_id=doctor.id, filename=filename)
    db.session.add(photo)
    db.session.commit()
    flash('Photo uploaded!', 'success')
    return redirect(url_for('web.doctor_gallery', doctor_id=doctor.id))
Save the file.
6. Enhance Community Engagement
Create templates/doctor_community.html:
text

Copy
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <h4>Doctor Profile</h4>
            <p>{{ doctor.name }}</p>
            <p>★ {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
            <a href="#" class="btn btn-outline-primary">Edit Profile</a>

            <h4 class="mt-4">Dashboard Menu</h4>
            <ul class="list-group">
                <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
            </ul>
        </div>
        <div class="col-md-9">
            <h3>Community Engagement</h3>
            <div class="alert alert-info">
                Engaging with the community as a doctor helps build trust and establish you as an authority in your field.
            </div>
            <h5>Recent Threads in Your Specialties</h5>
            <a href="{{ url_for('web.community') }}" class="btn btn-outline-primary mb-3">View All Threads</a>
            {% if threads %}
                <ul>
                    {% for thread in threads %}
                        <li><a href="{{ url_for('web.community_thread', thread_id=thread.id) }}">{{ thread.title }}</a></li>
                    {% endfor %}
                </ul>
            {% else %}
                <p>No recent community threads in your specialties</p>
            {% endif %}
        </div>
    </div>
</div>
Save the file.
Add the community route in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/community')
@login_required
def doctor_community(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    procedures = Procedure.query.join(DoctorProcedure).filter(DoctorProcedure.doctor_id == doctor.id).all()
    procedure_ids = [proc.id for proc in procedures]
    threads = Community.query.filter(Community.procedure_id.in_(procedure_ids)).order_by(Community.created_at.desc()).limit(5).all()
    return render_template('doctor_community.html', doctor=doctor, threads=threads)
Save the file.
7. Implement Verification
Add a Verification model in models.py:
text

Copy
class Verification(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    doctor_id = db.Column(db.Integer, db.ForeignKey('doctor.id'), nullable=False)
    medical_license = db.Column(db.String(100), nullable=True)
    qualifications = db.Column(db.Text, nullable=True)
    practice_location = db.Column(db.String(100), nullable=True)
    document_filename = db.Column(db.String(100), nullable=True)
    status = db.Column(db.String(20), default='incomplete')  # incomplete, submitted, reviewed, verified
    doctor = db.relationship('Doctor', backref='verifications')
Save the file.
Update the database schema:
Run: flask db migrate -m "Add Verification model"
Run: flask db upgrade
Create templates/doctor_verification.html:
text

Copy
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <h4>Doctor Profile</h4>
            <p>{{ doctor.name }}</p>
            <p>★ {{ doctor.rating }} ({{ doctor.review_count }} reviews)</p>
            <a href="#" class="btn btn-outline-primary">Edit Profile</a>

            <h4 class="mt-4">Dashboard Menu</h4>
            <ul class="list-group">
                <li class="list-group-item"><a href="{{ url_for('web.doctor_dashboard', doctor_id=doctor.id) }}">Overview</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_appointments', doctor_id=doctor.id) }}">Appointments</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_leads', doctor_id=doctor.id) }}">Patient Leads</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_reviews', doctor_id=doctor.id) }}">Reviews</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_procedures', doctor_id=doctor.id) }}">My Procedures</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_availability', doctor_id=doctor.id) }}">Availability</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_gallery', doctor_id=doctor.id) }}">Gallery</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_community', doctor_id=doctor.id) }}">Community</a></li>
                <li class="list-group-item"><a href="{{ url_for('web.doctor_verification', doctor_id=doctor.id) }}">Verification <span class="badge bg-warning">NEW</span></a></li>
            </ul>
        </div>
        <div class="col-md-9">
            <h3>Doctor Verification for India</h3>
            <div class="row">
                <div class="col-md-6">
                    <h5>Verification Status</h5>
                    <p>Document Submission: {{ verification.status if verification else 'Incomplete' }}</p>
                    <p>Admin Review: {{ 'Reviewed' if verification and verification.status == 'reviewed' else 'Not started' }}</p>
                    <p>Verification Badge: {{ 'Active' if doctor.is_verified else 'Inactive' }}</p>
                    <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#verificationModal">Complete Verification</a>
                </div>
                <div class="col-md-6">
                    <h5>Verification Details</h5>
                    <p>Medical License Number (MCI): {{ verification.medical_license if verification else 'Not provided' }}</p>
                    <p>Qualifications: {{ verification.qualifications if verification else 'Not provided' }}</p>
                    <p>Practice Location: {{ verification.practice_location if verification else 'Not provided' }}</p>
                </div>
            </div>
            <h5 class="mt-4">Verification Process</h5>
            <div class="row">
                <div class="col-md-4">
                    <p>1. Submit Documents</p>
                    <p>Upload your medical license and qualifications</p>
                </div>
                <div class="col-md-4">
                    <p>2. Verification Review</p>
                    <p>Our team reviews your credentials</p>
                </div>
                <div class="col-md-4">
                    <p>3. Get Verified</p>
                    <p>Receive your verified badge and enhanced visibility</p>
                </div>
            </div>
            <h5 class="mt-4">Benefits of Verification</h5>
            <ul>
                <li>Enhanced trust and credibility with patients</li>
                <li>Verified badge on your profile</li>
                <li>Priority listing in doctor search</li>
            </ul>
        </div>
    </div>
</div>

<!-- Verification Modal -->
<div class="modal fade" id="verificationModal" tabindex="-1" aria-labelledby="verificationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="verificationModalLabel">Complete Verification</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="POST" action="{{ url_for('web.submit_verification', doctor_id=doctor.id) }}" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="medical_license" class="form-label">Medical License Number (MCI)</label>
                        <input type="text" name="medical_license" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label for="qualifications" class="form-label">Qualifications</label>
                        <textarea name="qualifications" class="form-control" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="practice_location" class="form-label">Practice Location</label>
                        <input type="text" name="practice_location" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label for="document" class="form-label">Upload Document</label>
                        <input type="file" name="document" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>
Save the file.
Add the verification route in routes.py:
text

Copy
@web.route('/dashboard/doctor/<int:doctor_id>/verification')
@login_required
def doctor_verification(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    verification = Verification.query.filter_by(doctor_id=doctor.id).first()
    return render_template('doctor_verification.html', doctor=doctor, verification=verification)

@web.route('/dashboard/doctor/<int:doctor_id>/submit_verification', methods=['POST'])
@login_required
def submit_verification(doctor_id):
    if current_user.role != 'doctor':
        return redirect(url_for('web.index'))
    doctor = Doctor.query.get_or_404(doctor_id)
    if doctor.user_id != current_user.id:
        flash('Unauthorized access.', 'danger')
        return redirect(url_for('web.index'))
    medical_license = request.form.get('medical_license')
    qualifications = request.form.get('qualifications')
    practice_location = request.form.get('practice_location')
    file = request.files['document']
    filename = secure_filename(file.filename)
    file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))

    verification = Verification.query.filter_by(doctor_id=doctor.id).first()
    if not verification:
        verification = Verification(doctor_id=doctor.id)
        db.session.add(verification)
    verification.medical_license = medical_license
    verification.qualifications = qualifications
    verification.practice_location = practice_location
    verification.document_filename = filename
    verification.status = 'submitted'
    db.session.commit()

    flash('Verification documents submitted!', 'success')
    return redirect(url_for('web.doctor_verification', doctor_id=doctor.id))
Save the file.
8. Test the Updated Dashboard
Test the implementation:
Restart the application: Restarted Start application
Log in as the test doctor (testdoctor@antidote.com, password: doctorpass123):
Navigate to /dashboard/doctor/1 and verify the profile displays "Dr. Test" with correct details.
Go to /dashboard/doctor/1/leads and confirm the table displays (even if empty).
Go to /dashboard/doctor/1/procedures, add a procedure (e.g., Rhinoplasty), and verify it appears.
Go to /dashboard/doctor/1/availability, set hours (e.g., Monday 9:00-17:00), and confirm they save.
Go to /dashboard/doctor/1/gallery, upload a photo (use a test image), and verify it appears.
Go to /dashboard/doctor/1/community and confirm threads related to Rhinoplasty appear (if any).
Go to /dashboard/doctor/1/verification, submit verification details, and confirm the status updates.
Log out and log in as the test user (testuser@antidote.com, password: password123):
Navigate to /doctors/detail/1 (Dr. Test), book an appointment (e.g., Rhinoplasty on 2025-05-01 at 10:00), and confirm the request submits.
Submit a lead for Dr. Test (e.g., Patient Name: Test User, Procedure: Rhinoplasty).
Log back in as the test doctor (testdoctor@antidote.com):
Go to /dashboard/doctor/1/appointments and verify the upcoming appointment appears.
Go to /dashboard/doctor/1/leads, confirm the lead appears, and respond to it (e.g., accept).
Check email notifications (if email is set up; otherwise, check server logs).
text

Copy

---

### Summary of Changes
- Fixed the "Doctor not found" issue by ensuring the test doctor account is properly set up and linked to a procedure.
- Implemented the leads section as a table, even when empty.
- Added appointment scheduling integrated with availability, including new models and routes.
- Implemented procedures, gallery, and verification features with modals for adding data.
- Enhanced community engagement to display relevant threads.
- Provided a testing plan to verify all features using the test doctor and user accounts.

Let me know if you’d like to focus on a specific section or make further adjustments!